version: 0.2
env:
  parameter-store:
    LOGIN: LOGIN
    HOST: HOST
    Organization: Organization
    Project: Project
phases:
  install:
    commands:
    - apt-get update
    - apt-get install -y openjdk-17-jdk
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - cp ./settings.xml /root/.m2/settings.xml
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain bonnyzone --domain-owner 163447728448 --region us-east-2 --query authorizationToken --output text`
  pre_build:
    commands:
    - apt-get update
    - apt-get install -y jq checkstyle
    - wget https://dlcdn.apache.org/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz
    - tar xzvf apache-maven-3.9.4-bin.tar.gz
    - ln -s apache-maven-3.9.4 maven
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
    - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
    - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
  build:
    commands:
    - mvn test || exit 1
    - mvn checkstyle:checkstyle || exit 1
    - echo "Starting SonarQube code analysis"
    - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ -Dsonar.junit.reportsPath=target/surefire-reports/ -Dsonar.jacoco.reportsPath=target/jacoco.exec -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml || exit 1
    - sleep 5
    - curl -f https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project -o result.json || exit 1
    - cat result.json
    - if [ $(jq -r '.projectStatus.status' result.json) = "ERROR" ]; then
        echo "Quality Gate failed. Failing the build.";
        exit 1;
      fi
